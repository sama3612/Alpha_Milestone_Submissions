Team 102-2


Alpha


Sai Maddhi, Andrew Wu, Jeff Colgan, Colin Moran


Application Name: Link


Application Description: “Link” will be a mobile application that automatically uploads users’ (primarily college students) class schedules as well as allowing users to manually enter other times they are busy. Users will be able to friend other users and see a calendar view of when they are able to meet with a certain friend based on their uploaded schedule (indicated by red or green). We would also hopefully implement notifications that notify users that their friends are able to “link”.


Vision Statement:
Link will be launched primarily targeting college students who are looking for a way to see when their friends are available to hang out throughout the day. It will be  a mobile app that will offer unmatched convenience by giving users the freedom to spend more time connecting and less time planning. Unlike asking your friends when they are free and potentially waiting hours for them to respond, Link ensures you will always know when your friends are free.


Version Control: We made three distinct repositories as instructed, Alpha_Milestone_Submissions, Alpha_Meeting_Logs, and Alpha_Project_Code, where we will push all of our documents so everyone has access at all times.


Development Method:  Agile. We’ll be using this development method so that we can account for changes in plans taking into account the scope of this project and our own personal experiences. Instead of using Waterfall where it is not iterative, we are planning on using Agile to adapt our plan as we continue development. Agile’s superior flexibility and communication emphasis will allow us to work together efficiently to bring together an app that will serve customers successfully.


Communication Plan:  We will be primarily using GroupMe to communicate between team members. We also can use texting and email as a backup contingency for communication. All of the repositories for the project are shared amongst us and we can view changes that are made by others there as well.


Proposed Architecture Plan:
We are planning on using Flutter to develop the mobile app. For our backend, we will connect to Firebase and store our user data there. Using the programming language Dart which is specific to Flutter, we are planning on creating both the frontend and backend in a way in which they are integrated with one another, i.e. displaying data in a calendar view based on the data that was retrieved from the database. As we start developing we will change the APIs that we use but to start, we plan on using Google Calendar API to display the data and view events.


Meeting Plan:  We will be meeting briefly before recitation on Thursdays, then have a more intensive meeting after the recitation period.  We will also communicate regularly if the meeting times or places change.  These meetings will primarily be face-to-face communication.